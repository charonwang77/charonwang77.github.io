<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Charon</title>
    <link>https://charon-7.github.io/</link>
    <description>Recent content on Charon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Jul 2021 18:53:09 +0800</lastBuildDate><atom:link href="https://charon-7.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【MarkDown】MarkDown语法</title>
      <link>https://charon-7.github.io/post/blog_markdown/</link>
      <pubDate>Thu, 15 Jul 2021 18:53:09 +0800</pubDate>
      
      <guid>https://charon-7.github.io/post/blog_markdown/</guid>
      <description>一、各级标题 一级标题：# 标题 二级标题：## 标题 三级标题：### 标题 四级标题：#### 标题 五级标题：##### 标题 六级标题：###### 标题 二、字体 加粗：**文字** 加粗的文字
删除线：~~文字~~ 被删除的文字
斜体：*文字* 斜体文字
三、代码块 代码块：```语言 int a = 0; int b = 1; print(&amp;#34;%d&amp;#34;,a+b); 四、引用 引用：&amp;gt;作者 &amp;gt;&amp;gt;作者  引用A
 引用B
  五、分割线 分割线：--- 分割线：***  分割的段落A
 分割的段落B
六、图片插入 在线图片+本地图片：![图片名字](图片路径) // 图片的名字会在图片加载失败时显示 // 本地图片放在和md同一级目录时，路径 = ../imagename.jpg 七、超链接 超链接：[我的github](地址) 我的GitHub</description>
    </item>
    
    <item>
      <title>【C&#43;&#43;】STL容器特性总结</title>
      <link>https://charon-7.github.io/post/blog_stl/</link>
      <pubDate>Tue, 01 Jun 2021 23:11:30 +0800</pubDate>
      
      <guid>https://charon-7.github.io/post/blog_stl/</guid>
      <description>STL容器特性总结 1.Sequence Containers: 维持顺序的容器
vector:
动态数组；
O(1)随机读取，O(1)尾部增删；
可作stack用。
//创建vector容器对象，并且通过模板参数指定容器中存放的数据的类型  vector&amp;lt;int&amp;gt; v1; //向容器中放数据  v1.push_back(10); v1.push_back(20); v1.push_back(30); v1.push_back(40); vector&amp;lt;int&amp;gt; v2; v2 = v1; vector&amp;lt;int&amp;gt; v3; v3.assign(10,0); // 10个0赋值给v3  v1.begin(); // 返回迭代器，这个迭代器指向容器中第一个数据  v1.end(); // 返回迭代器，这个迭代器指向容器元素的最后一个元素的下一个位置 // 遍历方式：  for (vector&amp;lt;int&amp;gt;::iterator it = v1.begin(); it != v1.end(); it++) { cout &amp;lt;&amp;lt; *it &amp;lt;&amp;lt; endl; } cout &amp;lt;&amp;lt; endl; // 功能:容量和大小  v1.empty(); // 判断容器是否为空  v1.capacity(); // 容器的容量  v1.size(); // 返回容器中元素的个数  v1.</description>
    </item>
    
    <item>
      <title>[最优化]一维搜索</title>
      <link>https://charon-7.github.io/post/blog_algorithm/</link>
      <pubDate>Wed, 19 May 2021 12:53:09 +0800</pubDate>
      
      <guid>https://charon-7.github.io/post/blog_algorithm/</guid>
      <description>一、试探法 进退法 等距搜索法 二分搜索法 分数法 0.618法 二、插值法 三点二次插值法 试位法 牛顿法 </description>
    </item>
    
    <item>
      <title>Charon的个人简介</title>
      <link>https://charon-7.github.io/post/blog/</link>
      <pubDate>Wed, 19 May 2021 12:53:09 +0800</pubDate>
      
      <guid>https://charon-7.github.io/post/blog/</guid>
      <description>教育经历 武汉理工大学 数学 </description>
    </item>
    
  </channel>
</rss>
