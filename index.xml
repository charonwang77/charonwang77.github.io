<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Charon</title>
    <link>http://charonwang77.github.io/</link>
    <description>Recent content on Charon</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Jun 2021 23:11:30 +0800</lastBuildDate><atom:link href="http://charonwang77.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>STL容器特性总结</title>
      <link>http://charonwang77.github.io/post/blog_stl/</link>
      <pubDate>Tue, 01 Jun 2021 23:11:30 +0800</pubDate>
      
      <guid>http://charonwang77.github.io/post/blog_stl/</guid>
      <description>STL容器特性总结 1.Sequence Containers: 维持顺序的容器 vector:
动态数组；
O(1)随机读取，O(1)尾部增删；
可作stack用。
list :
双向链表；
可做stack和queue用。
deque:
双端队列；
O(1)随机读取，O(1)头部尾部增删。
2.Container Adaptors: 基于其他容器实现的数据结构 stack:
栈，后入先出；
常用于深度优先、字符串匹配、单调栈问题；
默认基于deque。
queue:
队列，先入先出；
常用于广度优先搜索；
默认基于deque。
priority_queue:
最大值先出的数据结构；
用O(nlogn)的时间排序数组，O(nlogn)的时间插入任意值，O(1)的时间获得最大值, O(logn)的时间删除最大值；
常用于维护数据结构并快速获取最大最小；
默认基于vector。
3.Associative Containers: 实现了排好序的数据结构 set:
有序集合，元素不可重复；
O(nlogn)排序数组，插入删除查找任意值，获得最大最小值。
multiset:
支持重复元素的set。
map:
有序映射或有序表；
在map的基础上加上映射关系，可以对每一个元素key存一个值value。
multimap:
支持重复元素的map。
4.Unordered Associative Containers: 对每个Associative Containers实现了哈希版本 unordered_set:
哈希集合；
O(1)插入、查找、删除元素；
常用于快速查询一个元素是否在这个容器内。
unordered_multiset:
支持重复元素的unordered_set。
unordered_map:
哈希映射或哈希表；
在unordered_set基础上加上映射关系，可以对每一个元素key存一个值value。
unordered_multimap:
支持重复元素的unordered_map。
5.堆 heap </description>
    </item>
    
    <item>
      <title>Charon的个人简介</title>
      <link>http://charonwang77.github.io/post/blog/</link>
      <pubDate>Wed, 19 May 2021 12:53:09 +0800</pubDate>
      
      <guid>http://charonwang77.github.io/post/blog/</guid>
      <description>一个7点起床11点睡觉的打杂程序员;
一个喜欢猫、喜欢爬山和滑雪的LSP;
一个热爱数学、热爱代码、热爱学习的FP.</description>
    </item>
    
  </channel>
</rss>
